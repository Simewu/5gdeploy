---
networks:
  hnet:
    name: hnet
    ipam:
      driver: default
      config:
        - subnet: 192.168.250.0/24
    driver_opts:
      com.docker.network.bridge.name: br-hnet
      com.docker.network.bridge.enable_ip_masquerade: 1
  s1:
    name: s1
    ipam:
      driver: default
      config:
        - subnet: 192.168.12.0/24
    driver_opts:
      com.docker.network.bridge.name: br-s1
      com.docker.network.bridge.enable_ip_masquerade: 0
  air:
    name: air
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
    driver_opts:
      com.docker.network.bridge.name: br-air
      com.docker.network.bridge.enable_ip_masquerade: 0
services:
  epc:
    container_name: epc
    hostname: epc
    image: srsran4g
    command: ["/entrypoint.sh", "lte_epc"]
    init: true
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      hnet:
        ipv4_address: 192.168.250.20
      s1:
        ipv4_address: 192.168.12.20
    volumes:
      - type: bind
        source: ./logs
        target: /srsran-log
  enb:
    container_name: enb
    hostname: enb
    image: srsran4g
    command: ["/entrypoint.sh", "lte_enb"]
    init: true
    cap_add:
      - IPC_LOCK
      - SYS_NICE
    networks:
      s1:
        ipv4_address: 192.168.12.50
      air:
        ipv4_address: 192.168.10.50
    volumes:
      - type: bind
        source: ./logs
        target: /srsran-log
  ue:
    container_name: ue
    hostname: ue
    image: srsran4g
    command: ["/entrypoint.sh", "lte_ue"]
    init: true
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      air:
        ipv4_address: 192.168.10.55
    volumes:
      - type: bind
        source: ./logs
        target: /srsran-log
